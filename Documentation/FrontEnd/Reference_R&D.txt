
Old Project Name: health-tracker
=======================================================================================================================================================================

-> In vs code first do this for hosting in ngrok 

npm run build

-> it is used to host react 

-> This line is used for first time only ( npm install -g serve )

serve -s build
=======================================================================================================================================================================
-> In ngrok this file is used to run two at same time
-> It is in 

version: "2"
authtoken: 32smWHVgnc3lPv7mGXDSbL4EUa5_2zdxyHPVuSXjoHff9PPAo

tunnels:
  react:
    addr: 3000
    proto: http

  springboot:
    addr: 8080
    proto: http
------
used to run both at a time

ngrok start --all --config "C:\Users\jeeva\AppData\Local\Packages\ngrok.ngrok_1g87z0zv29zzc\LocalCache\Roaming\ngrok\ngrok.yml"

========================

*wrking fetch code*
===
import React, { useState, useEffect } from "react";
import {
  BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer
} from "recharts";

const WeightDashboard = () => {
  const [filter, setFilter] = useState("year");
  const [data, setData] = useState([]);

   // Fetch data from Spring Boot
  useEffect(() => {
 //fetch("http://localhost:8080/api/weights")
 fetch("https://9a11fefd1863.ngrok-free.app/api/weights", {
  headers: {
    "ngrok-skip-browser-warning": "true"
  }
})

  .then((res) => {
    if (!res.ok) {
      throw new Error(`HTTP error! Status: ${res.status}`);
    }
    return res.json();
  })
  .then((data) => {
    console.log("Fetched Data:", data);
    setData(data);
  })
  .catch((err) => console.error("Fetch Error:", err));
}, []);
 

  return (
    <div style={{ padding: "20px" }}>
      <h2>Weight Progress Dashboard</h2>

      <div style={{ marginBottom: "20px" }}>
        <button onClick={() => setFilter("week")}>Week</button>
        <button onClick={() => setFilter("month")}>Month</button>
        <button onClick={() => setFilter("3month")}>3-Month</button>
        <button onClick={() => setFilter("year")}>Year</button>
        <button onClick={() => setFilter("allYears")}>All Years</button>
      </div>

      <ResponsiveContainer width="100%" height={400}>
        <BarChart data={data}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="label" />
          <YAxis />
          <Tooltip />
          <Bar dataKey="weight" fill="#8884d8" />
        </BarChart>
      </ResponsiveContainer>
    </div>
  );
};

export default WeightDashboard;
